# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FngftDMqw-VeSJxtIw2mE3hkRKwLB7qB
"""

# !pip install gensim
# Run this in the terminal and do not include it in the code if you are using an IDE

# !pip show gensim
# Use it to make sure that you have downloaded Gensim library properly

import gensim.downloader as api

import json
import random

model = api.load("word2vec-google-news-300")

# Testing the model
# print(model.similarity("actress", "actor"))
# print(model.similarity("actor", "banana"))

with open('data_set/synonym.json', 'r') as file:
  data_set = json.load(file)

with open('word2vec-google-news-300-details.csv', 'w') as file:
  file.write("#,question_word,correct_answer_word,system_guess_word,label\n")
  i = 1
  correct_guesses_counter = 0
  wrong_guesses_counter = 0

  for entry in data_set:
    question_word = entry["question"]
    choices = entry["choices"]
    correct_answer_word = entry["answer"]
    label = "guess"
    similarities = {}

    if question_word in model:
      for choice in choices:
        if choice in model:
          similarities[choice] = model.similarity(question_word, choice)
      if  len(similarities) > 0:
        system_guess_word = max(similarities, key=similarities.get)
        if system_guess_word == correct_answer_word:
          label = 'correct'
          correct_guesses_counter += 1
        else:
          label = 'wrong'
          wrong_guesses_counter += 1

    if label == 'guess':
      system_guess_word = random.choice(choices)


    file.write(f"{i},{question_word},{correct_answer_word},{system_guess_word},{label}\n")
    i+=1

model_accuracy = correct_guesses_counter/(correct_guesses_counter +  wrong_guesses_counter)
vocab_size = vocab_size = len(model.key_to_index)
with open('analysis.csv', 'w') as file:
  file.write('Model Name,Size of Vocabulary,#Correct Labels,Model Accuracy\n')
  file.write(f'word2vec-google-news-300,{vocab_size},{correct_guesses_counter},{model_accuracy*100:.1f}%\n')